<?php namespace Ollyxar\AntiMalware;

/**
 * Class Report
 *
 * @package Ollyxar\AntiMalware
 */
class Report
{

    /**
     * Readable filesize
     *
     * @param string $file
     * @return string
     */
    protected static function getFileSize($file)
    {
        $size = filesize($file);
        $mod = 1024;
        $units = ['B', 'KB', 'MB', 'GB', 'TB', 'PB'];

        for ($i = 0; $size > $mod; $i++) {
            $size /= $mod;
        }

        return round($size, 2) . ' ' . $units[$i];
    }

    /**
     * Print header
     *
     * @return void
     */
    public static function header()
    {
        switch (Settings::$mode) {
            case Mode::CONSOLE:
                Console::line(Console::$colors['back']['blue'] . Console::$colors['front']['white']);
                Console::line(Console::$colors['back']['blue'] . Console::$colors['front']['white'] . " " . Scanner::title);
                Console::line(Console::$colors['back']['blue'] . Console::$colors['front']['white']);
                break;
            case Mode::WEB:
                $style = '<style type="text/css" media="all">@import url(https://fonts.googleapis.com/css?family=Titillium+Web);*{box-sizing:border-box}body{font-size:14px;color:#fff;font-family:"Titillium Web",sans-serif;background:#2f2b33}.in-progress{display:block}.complete{display:none}#content{max-width:1080px;margin:0 auto;}.s{padding:10px 0}.y{background:#fdf59a;color:#000;padding:5px 10px}.o{background: #d58512;padding:5px 10px}.r{background: #bd4a47;padding:5px 10px}.l{display:inline-block;width:150px}.ri{display:inline-block}.code{background:#464242;color:#fdfdfd;padding:5px 10px;font-size: 12px}.h-g{color:#5bf5a1;font-size:14px;margin-top:10px}span.r{padding:0 3px}</style>';
                print '<!DOCTYPE html><html><head><meta charset="UTF-8"><meta http-equiv="X-UA-Compatible" content="IE=edge"><meta name="viewport" content="width=device-width, initial-scale=1">' . $style . '</head><body><div id="content">';
                print '<h1>' . Scanner::title . '</h1>';
                print '<h2 class="in-progress">Scanning...</h2>';
                print '<h2 class="complete">Scan complete.</h2>';
                flush();
                break;
            default:
                print "\n   [ " . Scanner::title . " ]   \n\n";
                print date("Y-m-d H:i:s") . " - scan start.\n\n";
        }
    }

    /**
     * Print footer
     *
     * @param $scannedTotal
     * @param $suspiciousTotal
     * @return void
     */
    public static function footer($scannedTotal, $suspiciousTotal)
    {
        switch (Settings::$mode) {
            case Mode::CONSOLE:
                Console::line(Console::$colors['back']['blue'] . Console::$colors['front']['white']);
                Console::line(Console::$colors['back']['blue'] . Console::$colors['front']['white'] . " " . date("Y-m-d H:i:s") . " - scan end.");
                Console::line(Console::$colors['back']['blue'] . Console::$colors['front']['white'] . " Total PHP files scanned: {$scannedTotal}");

                if ($suspiciousTotal) {
                    $suspiciousTotal = Console::$colors['back']['red'] . ' ' . $suspiciousTotal . ' ' . Console::$colors['back']['blue'];
                } else {
                    $suspiciousTotal = " " . $suspiciousTotal . " ";
                }

                Console::line(Console::$colors['back']['blue'] . Console::$colors['front']['white'] . " Total suspicious files:{$suspiciousTotal}");
                Console::line(Console::$colors['back']['blue'] . Console::$colors['front']['white']);
                break;
            case Mode::WEB:
                if ($suspiciousTotal) {
                    $suspiciousTotal = '<span class="r">' . $suspiciousTotal . '</span>';
                }

                print '<h2>' . date("Y-m-d H:i:s") . " - scan end. Total PHP files scanned: {$scannedTotal}. Total suspicious files: {$suspiciousTotal}</h2>";
                print '<div class="s"></div>';
                print '</div></body><style type="text/css" media="all">.in-progress{display:none}.complete{display:block}</style></html>';
                break;
            default:
                print date("Y-m-d H:i:s") . " - scan end. Total PHP files scanned: {$scannedTotal}. Total suspicious files: {$suspiciousTotal}\n";
        }
    }

    /**
     * Report suspicious file
     *
     * @param $file
     * @param $suspicion
     */
    public static function suspect($file, $suspicion)
    {
        $fileSize = static::getFileSize($file);
        $owner = fileowner($file);
        $selfOwner = getmyuid();
        $permissions = substr(sprintf('%o', fileperms($file)), -4);
        $hazardLevel = count($suspicion);

        if (function_exists('posix_getpwuid')) {
            $owner = posix_getpwuid($owner);
            $owner = $owner['name'];
            $selfOwner = posix_getpwuid($selfOwner);
            $selfOwner = $selfOwner['name'];
        }

        switch (Settings::$mode) {
            case Mode::CONSOLE:
                $background = Console::$colors['back']['yellow'];
                $foreground = Console::$colors['front']['black'];

                if ($hazardLevel > 4) {
                    $background = Console::$colors['back']['orange'];
                    $foreground = Console::$colors['front']['white'];
                }

                if ($hazardLevel > 9) {
                    $background = Console::$colors['back']['red'];
                    $foreground = Console::$colors['front']['white'];
                }

                Console::line();
                Console::line($background . $foreground . " File:         " . $file);
                Console::line($background . $foreground . " Size:         " . $fileSize);

                if ($owner !== $selfOwner) {
                    $owner = "[Warning] " . $owner;
                }

                Console::line($background . $foreground . " Owner:        " . $owner);

                if ((int)$permissions == 777) {
                    $permissions = "[Warning] " . $permissions;
                }

                Console::line($background . $foreground . " Permissions:  " . $permissions);
                Console::line($background . $foreground . " Hazard level: " . $hazardLevel);
                Console::line($background . $foreground . "");

                foreach ($suspicion as $value) {
                    Console::line(Console::$colors['back']['gray'] . Console::$colors['front']['blue'] . ' [' . $value['group'] . '] at line ' . $value['line']);
                    $textLeft = substr($value['buffer'], 0, strpos($value['buffer'], $value['danger']));
                    $textRight = substr($value['buffer'], strpos($value['buffer'], $value['danger']) + strlen($value['danger']));
                    $textLeft = substr($textLeft, -10);
                    $textRight = substr($textRight, 0, 10);
                    $text = Console::$colors['back']['gray'] . Console::$colors['front']['white'] . " " . $textLeft . Console::$colors['back']['red'] . $value['danger'] . Console::$colors['back']['gray'] . $textRight;
                    $text = trim(str_replace(["\n", "\r", "\t"], "", $text));
                    Console::line($text);
                    Console::line(Console::$colors['back']['gray'] . Console::$colors['front']['white']);
                }

                Console::line();
                break;
            case Mode::WEB:
                if ($hazardLevel > 9) {
                    print '<div class="r">';
                } elseif ($hazardLevel > 4) {
                    print '<div class="o">';
                } else {
                    print '<div class="y">';
                }

                print '<div class="l">File:</div><div class="ri">' . $file . '</div><div></div>';
                print '<div class="l">Size:</div><div class="ri">' . $fileSize . '</div><div></div>';

                if ($owner !== $selfOwner) {
                    $owner = "[Warning] " . $owner;
                }

                print '<div class="l">Owner:</div><div class="ri">' . $owner . '</div><div></div>';

                if ((int)$permissions == 777) {
                    $permissions = "[Warning] " . $permissions;
                }

                print '<div class="l">Permissions:</div><div class="ri">' . $permissions . '</div><div></div>';
                print '<div class="l">Hazard level:</div><div class="ri">' . $hazardLevel . '</div><div></div>';
                print '<div class="code">';

                foreach ($suspicion as $value) {
                    print '<div class="h-g">' . ' [' . $value['group'] . '] at line ' . $value['line'] . '</div>';
                    $textLeft = substr($value['buffer'], 0, strpos($value['buffer'], $value['danger']));
                    $textRight = substr($value['buffer'], strpos($value['buffer'], $value['danger']) + strlen($value['danger']));
                    $textLeft = substr($textLeft, -10);
                    $textRight = substr($textRight, 0, 10);

                    $text = htmlspecialchars($textLeft) . '<span class="r">' . htmlspecialchars($value['danger']) . '</span>' . htmlspecialchars($textRight);
                    $text = trim(str_replace(["\n", "\r", "\t"], "", $text));
                    print $text;
                }

                print '</div></div><div class="s"></div>';
                flush();
                break;
            default:
                print str_pad("", Settings::$width, "=") . "\n";
                print "File:         " . $file . "\n";
                print "Size:         " . $fileSize . "\n";
                print "Owner:        ";

                if ($owner !== $selfOwner) {
                    print "[Warning] ";
                }

                print  $owner . "\n";
                print "Permissions:  ";

                if ((int)$permissions == 777) {
                    print "[Warning] ";
                }

                print  $permissions . "\n";
                print "Hazard level: " . $hazardLevel . "\n";

                foreach ($suspicion as $value) {
                    print str_pad("", Settings::$width, "-") . "\n";
                    print '[' . $value['group'] . '] at line ' . $value['line'] . "\n";
                    print 'danger:  ' . $value['danger'] . "\n";
                }

                print str_pad("", Settings::$width, "=") . "\n";
        }
    }
}